
/**
 * wpcheck module fpd-vulnerability.js
 * Scan a PHP file for Full Path Disclosure
 */


/**
 * Required modules
 */
const fetch = require("node-fetch");
const axios = require('axios')
const request = require('request').defaults({ followRedirect: false })
const fs = require('../fs')
const log = require('../log')


/**
 * Initiator method
 *
 * @param   {Object}  data  Data object with request values
 * @return  void
 */

exports.fire = (data) => new Promise(function (resolve, reject) {
    {

        const { wpURL, siteURL, userAgent, silentMode } = data

        const filterName = fs.fileName(__filename, '.js')

        const logObj = { silentMode, filterName }

        const targetURL = `${wpURL}/wp-includes/rss.php`;

        // const response =await fetch(targetURL);
        // const javed = await response.json();
        // const javed =await axios.get(targetURL,
        //     {
        //     headers:{ 'User-Agent': userAgent }
        //   }
        // );
        /*const javed = await request({
            'url': targetURL,
            'method': 'GET',
            'headers': { 'User-Agent': userAgent }
        });//*/
        // console.log('javed',response.status)
        console.log("Inside FPD");
        request({
            'url': targetURL,
            'method': 'GET',
            'headers': { 'User-Agent': userAgent }
        }, (error, response, body) => {

            if (error || response.statusCode === 404) {
                // return `${targetURL} is not found`;//log.info( `${targetURL} is not found`, logObj )
                reject(`${targetURL} is not found`)
            }

            if (body.includes('_deprecated_file')) {
                //return `${siteURL} is affected by FPD vulnerability`;//log.warn( `${siteURL} is affected by FPD vulnerability`, logObj )
                reject(`${siteURL} is affected by FPD vulnerability`)
            }

            // return `${siteURL} is not affected by FPD vulnerability`;//log.ok( `${siteURL} is not affected by FPD vulnerability`, logObj )
            resolve(`${siteURL} is not affected by FPD vulnerability`)

        })//*/

    }
})